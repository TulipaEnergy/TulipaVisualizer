stages:
  - format # Always runs
  - docker-build # Runs iff -build-docker
  - build # Runs on main and in MR, but can be skipped with -draft, uses custom docker image
  - test

variables:
  CARGO_HOME: "/root/.cargo"
  RUSTUP_HOME: "/root/.rustup"
  DOCKER_IMAGE: "gitlab.ewi.tudelft.nl:4242/cse2000-software-project/2024-2025/cluster-k/11c/11c"
  GIT_CLEAN_FLAGS: "-ffdx -e .rustup/ -e src-tauri/target/"
  FRONTEND_COVERAGE_PATH: "coverage/cobertura-coverage.xml"
  BACKEND_COVERAGE_PATH: "cargo-coverage.xml"
  MERGED_COVERAGE_PATH: "merged-coverage.xml"

format-job:
  stage: format
  image: node:22
  rules:
    - when: always
  script:
    - echo "Checking Prettier formatting..."
    - pwd
    - ls -a
    - npx prettier . --check --ignore-path /builds/cse2000-software-project/2024-2025/cluster-k/11c/11c/.prettierignore # To fix automatically, use: npm run format

frontend-test-job:
  stage: test
  image: node:22
  rules:
    - !reference [build-n-lint-job, rules]
  script:
    - echo "Running frontend tests..."
    - npm ci --cache .npm --prefer-offline
    - npm run test:coverage
  artifacts:
    paths:
      - "$FRONTEND_COVERAGE_PATH"
  coverage: '/^Lines\s*:\s*(\d+\.\d+)%/'

backend-test-job:
  stage: test
  image: $DOCKER_IMAGE:latest
  rules:
    - !reference [build-n-lint-job, rules]
  script:
    - echo "Running backend tests..."
    - export PATH="$CARGO_HOME/bin:$PATH"
    - rustup default stable
    - rustup component add llvm-tools-preview
    - cargo install cargo-llvm-cov
    - curl -L "https://github.com/Benjamin1260/tulipa_output/releases/download/output/Norse_out.duckdb" -o "src-tauri/TESTDB.duckdb"
    - npm run tauri:test
    - cargo llvm-cov report --summary-only --manifest-path src-tauri/Cargo.toml
  artifacts:
    paths:
      - "$BACKEND_COVERAGE_PATH"
  coverage: '/TOTAL\s+\d+\s+\d+\s+\d+.\d+%\s+\d+\s+\d+\s+\d+.\d+%\s+\d+\s+\d+\s+(\d+.\d+%)/'

docker-build-job:
  image: docker:latest
  stage: docker-build
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_TITLE =~ /-build-docker$/
      when: always
    - when: never
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker build -f Dockerfile-tauri -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE

build-n-lint-job:
  stage: build
  image: $DOCKER_IMAGE:latest
  rules:
    - if: $CI_COMMIT_TITLE =~ /-draft$/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - pwd
    - echo "Building Tauri app..."
    - export PATH="$CARGO_HOME/bin:$PATH"
    - rustup show
    - rustup default stable
    - echo "Versions:"
    - node -v
    - rustup -V
    - rustc -V
    - npm ci --cache .npm --prefer-offline
    - npm run tauri build
